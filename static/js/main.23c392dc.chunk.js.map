{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/Pagination/Pagination.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["Card","word","className","CardList","words","console","log","map","idx","key","Pagination","wordsPerPage","totalWords","paginate","pageNumbers","i","Math","ceil","push","number","onClick","href","Navbar","onFileLoaded","cssClass","inputStyle","color","type","placeholder","aria-label","App","state","currentPage","handleForce","data","setState","pageNumber","this","indexOfLastPost","indexOfFirstPost","currentWords","slice","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iUAeeA,G,YAXF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZ,OAEF,yBAAKC,UAAU,QACb,yBAAKA,UAAU,SAAQ,8BAAOD,EAAK,KACnC,yBAAKC,UAAU,QAAO,8BAAOD,EAAK,QCQvBE,G,MAXE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEhB,OADAC,QAAQC,IAAIF,GAER,yBAAKF,UAAU,QACVE,EAAMG,KAAI,SAACN,EAAMO,GAAP,OACP,kBAAC,EAAD,CAAMC,IAAKD,EAAKP,KAAMA,UCgBvBS,EAxBI,SAAC,GAGhB,IAH4D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACtCC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACvDD,EAAYI,KAAKH,GAGrB,OAEQ,6BACI,wBAAIb,UAAU,cACbY,EAAYP,KAAI,SAAAY,GAAM,OACtB,wBAAIjB,UAAU,YAAYO,IAAKU,GAC3B,uBAAGC,QAAS,kBAAKP,EAASM,IAAUE,KAAK,KAAKnB,UAAU,aAAaiB,U,gBCK3EG,EAlBA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACd,OACI,6BACI,yBAAKrB,UAAU,uDACX,kBAAC,IAAD,CACIsB,SAAS,kBACTD,aAAcA,EACdE,WAAY,CAACC,MAAO,WAEpB,0BAAMxB,UAAU,eACZ,2BAAOA,UAAU,uBAAuByB,KAAK,SAASC,YAAY,SAASC,aAAW,WACtF,4BAAQ3B,UAAU,uCAAuCyB,KAAK,UAA9D,cCkDTG,E,2MA1CbC,MAAQ,CACN3B,MAAO,GACP4B,YAAa,EACbrB,aAAc,I,EAKlBsB,YAAc,SAAAC,GACZ7B,QAAQC,IAAI4B,GACZ,EAAKC,SAAS,CAAC/B,MAAO8B,K,EAGxBrB,SAAW,SAAAuB,GAAU,OAAI,EAAKD,SAAS,CAACH,YAAaI,K,wEAI3C,IAAD,EACsCC,KAAKN,MAA1CC,EADD,EACCA,YAAarB,EADd,EACcA,aAAcP,EAD5B,EAC4BA,MAC7BkC,EAAkBN,EAAcrB,EAChC4B,EAAmBD,EAAkB3B,EACrC6B,EAAepC,EAAMqC,MAAMF,EAAkBD,GAEnD,OACE,yBAAKpC,UAAU,OACX,kBAAC,EAAD,CAASqB,aAAcc,KAAKJ,cAC5B,yBAAK/B,UAAU,cAOjB,kBAAC,EAAD,CAAUE,MAAOoC,IACjB,kBAAC,EAAD,CAAY7B,aAAcA,EAAcC,WAAYR,EAAMsC,OAAQ7B,SAAUwB,KAAKxB,gB,GApCrE8B,IAAMC,WCdxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.23c392dc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Card.css'\r\n\r\nconst Card = ({ word }) => {\r\n    return (\r\n//<div className=\"wrap\"> \r\n  <div className=\"card\">\r\n    <div className=\"front\"><span>{word[2]}</span></div>\r\n    <div className=\"back\"><span>{word[3]}</span></div>\r\n  </div>\r\n// </div>\r\n)\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\n\r\nimport Card  from '../Card/Card'\r\n\r\nimport './CardList.css'\r\n\r\nconst CardList = ({ words }) => {\r\n    console.log(words)\r\n    return (\r\n        <div className='list'>\r\n            {words.map((word, idx) => (\r\n                <Card key={idx} word={word} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\n\r\n\r\nconst Pagination = ({ wordsPerPage, totalWords, paginate }) => {\r\n    const pageNumbers = []\r\n\r\n    for( let i = 1; i <= Math.ceil(totalWords / wordsPerPage); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n       \r\n            <nav>\r\n                <ul className='pagination'>\r\n                {pageNumbers.map(number => (\r\n                 <li className='page-item' key={number}>\r\n                     <a onClick={()=> paginate(number) } href='!#' className='page-link'>{number}\r\n                     </a>\r\n                 </li>   \r\n                )\r\n                )}   \r\n                </ul>  \r\n            </nav>\r\n      \r\n    )\r\n}\r\n\r\nexport default Pagination\r\n\r\n\r\n","import React from 'react'\r\nimport CSVReader from \"react-csv-reader\";\r\n\r\nconst Navbar = ({ onFileLoaded }) => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-dark bg-dark  justify-content-between\">\r\n                <CSVReader \r\n                    cssClass=\"react-csv-input\"\r\n                    onFileLoaded={onFileLoaded}\r\n                    inputStyle={{color: 'green'}}\r\n                    />\r\n                    <form className=\"form-inline\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\n\n\nimport './App.css'\nimport Cardlist from './components/CardList/CardList'\nimport Pagination from './components/Pagination/Pagination'\nimport Navbar from './components/Navbar/Navbar'\n\nconst words = [\n  [ 'русский', 'английский', 'кто-то', 'someone' ],\n  [ 'английский', 'русский', 'collide', 'сталкиваться' ],\n  [ 'английский', 'русский', 'convince', 'убеждать' ],\n  [ 'английский', 'русский', 'propagate', 'размножать' ],\n  [ 'английский', 'русский', 'sophisticated', 'утонченный' ],\n  [ 'английский', 'русский', 'unleashing', 'развязывание' ],\n  [ 'английский', 'русский', 'canvas', 'холст' ],\n  [ 'английский', 'русский', 'slice', 'ломтик' ],\n  [ 'английский', 'русский', 'tenant.', 'арендатор.' ]\n]\n\nclass App extends React.Component {\n\n  state = {\n    words: [], \n    currentPage: 1,\n    wordsPerPage: 24\n    \n}\n\n\nhandleForce = data => {\n  console.log(data);\n  this.setState({words: data})\n};\n\npaginate = pageNumber => this.setState({currentPage: pageNumber})\n\n\n\nrender() {\n  const { currentPage, wordsPerPage, words } = this.state;\n  const indexOfLastPost = currentPage * wordsPerPage;\n  const indexOfFirstPost = indexOfLastPost - wordsPerPage;\n  const currentWords = words.slice(indexOfFirstPost, indexOfLastPost)\n\n  return (\n    <div className=\"App\">\n        <Navbar  onFileLoaded={this.handleForce}/>\n        <div className=\"container\">\n        {/* <CSVReader\n          cssClass=\"react-csv-input\"\n          label=\"Select CSV\"\n          onFileLoaded={this.handleForce}\n        /> */}\n      </div>\n      <Cardlist words={currentWords}/>\n      <Pagination wordsPerPage={wordsPerPage} totalWords={words.length} paginate={this.paginate}/>\n      \n    \n  </div>\n  )\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}